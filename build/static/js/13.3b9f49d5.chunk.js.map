{"version":3,"sources":["components/uielements/styles/checkbox.style.js","components/uielements/checkbox.js","image/02.jpg","components/firebase/index.js","containers/Page/signin.style.js","containers/Page/signin.js"],"names":["AntCheckbox","ComponentName","styled","_templateObject","palette","__webpack_require__","d","__webpack_exports__","CheckboxGroup","checkbox","Checkbox","Group","module","exports","p","Component","SignInStyleWrapper","div","bgImage","props","WithDirection","login","authAction","clearMenu","appAction","SignIn","state","redirectToReferrer","email","password","remember","handleLogin","arguments","length","undefined","_this","_this$state","Firebase","then","doc","user","localStorage","getItem","setItem","uid","notification","history","push","message","catch","e","handleOnChange","setState","Object","defineProperty","target","name","value","_this$props","this","firebase","auth","onAuthStateChanged","nextProps","isLoggedIn","_this2","react_default","a","createElement","Redirect","to","pathname","signin_style","className","Link","intlMessages","id","input","onChange","size","placeholder","type","uielements_checkbox","checked","uielements_button","onClick","connect","Auth","idToken"],"mappings":"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","file":"static/js/13.3b9f49d5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntCheckbox = ComponentName => styled(ComponentName)`\n  &.ant-checkbox-wrapper {\n    font-size: 13px;\n    color: ${palette('text', 1)};\n    vertical-align: middle;\n\n    .ant-checkbox {\n      top: inherit;\n    }\n  }\n`;\n\nexport default AntCheckbox;\n","import { Checkbox } from 'antd';\nimport AntCheckbox from './styles/checkbox.style';\n\nconst checkbox = AntCheckbox(Checkbox);\nconst CheckboxGroup = Checkbox.Group;\n\nexport default checkbox;\nexport { CheckboxGroup };\n","module.exports = __webpack_public_path__ + \"static/media/02.047cdcc1.jpg\";","import React, { Component } from 'react';\nimport Button from '../uielements/button';\nimport Input from '../uielements/input';\nimport Modal from '../feedback/modal';\nimport { notification } from '../index';\nimport Firebase from '../../helpers/firebase/index';\n\nexport default class extends Component {\n  state = {\n    visible: false,\n    email: 'demo@gmail.com',\n    password: 'demodemo',\n    confirmLoading: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n  handleLogin = async () => {\n    const { email, password } = this.state;\n    if (!(email && password)) {\n      notification('error', 'Please fill in email. and password');\n      return;\n    }\n    this.setState({\n      confirmLoading: true,\n    });\n    const self = this;\n    let data;\n    if (this.props.signup) {\n      data = await Firebase.signup(Firebase.EMAIL, {\n        email,\n        password,\n      });\n    } else {\n      data = await Firebase.login(Firebase.EMAIL, {\n        email,\n        password,\n      });\n    }\n    const user = data && data.user ? data.user : false;\n    const message =\n      user === false && data && data.message\n        ? data.message\n        : 'Sorry Some error occurs';\n    if (user) {\n      const token = await user.getIdToken();\n      this.props.login(token);\n      this.props.history.push('/dashboard');\n    } else {\n      notification('error', message);\n      self.setState({\n        confirmLoading: false,\n      });\n    }\n  };\n  resetPassword = () => {\n    const { email } = this.state;\n    if (!email) {\n      notification('error', `Please fill in email.`);\n      return;\n    }\n    Firebase.resetPassword(email)\n      .then(() =>\n        notification('success', `Password reset email sent to ${email}.`)\n      )\n      .catch(error => notification('error', 'Email address not found.'));\n  };\n  render() {\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal} className=\"btnFirebase\">\n          {this.props.signup\n            ? 'Sign up with Firebase'\n            : 'Sign in with Firebase'}\n        </Button>\n        <Modal\n          title={\n            this.props.signup\n              ? 'Sign up with Firebase'\n              : 'Sign in with Firebase'\n          }\n          visible={this.state.visible}\n          confirmLoading={this.state.confirmLoading}\n          onCancel={this.handleCancel}\n          onOk={this.handleLogin}\n          className=\"isoFirebaseLoginModal\"\n          cancelText=\"Cancel\"\n          okText=\"Login\"\n        >\n          <form>\n            <div className=\"isoInputWrapper\">\n              <label>Email</label>\n              <Input\n                ref={email => (this.email = email)}\n                size=\"large\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={event => {\n                  this.setState({ email: event.target.value });\n                }}\n              />\n            </div>\n            <div className=\"isoInputWrapper\" style={{ marginBottom: 10 }}>\n              <label>Password</label>\n              <Input\n                type=\"password\"\n                size=\"large\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={event => {\n                  this.setState({ password: event.target.value });\n                }}\n              />\n            </div>\n            <span className=\"isoResetPass\" onClick={this.resetPassword}>\n              Reset Password\n            </span>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport bgImage from '../../image/02.jpg';\nimport WithDirection from '../../settings/withDirection';\n\nconst SignInStyleWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  height: 100vh;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: relative;\n  background: url(${bgImage}) no-repeat center center;\n  background-size: cover;\n\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    display: flex;\n    position: absolute;\n    background-color: rgba(0, 0, 0, 0.3);\n    z-index: 1;\n    top: 0;\n    left: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n    right: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n  }\n\n  .isoLoginContentWrapper {\n    width: 500px;\n    height: 100%;\n    overflow-y: auto;\n    z-index: 10;\n    position: relative;\n  }\n\n  .isoLoginContent {\n    min-height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 70px 50px;\n    position: relative;\n    background-color: #ffffff;\n\n    @media only screen and (max-width: 767px) {\n      width: 100%;\n      padding: 70px 20px;\n    }\n\n    .isoLogoWrapper {\n      width: 100%;\n      display: flex;\n      margin-bottom: 50px;\n      justify-content: center;\n      flex-shrink: 0;\n\n      a {\n        font-size: 24px;\n        font-weight: 300;\n        line-height: 1;\n        text-transform: uppercase;\n        color: ${palette('secondary', 2)};\n      }\n    }\n\n    .isoSignInForm {\n      width: 100%;\n      display: flex;\n      flex-shrink: 0;\n      flex-direction: column;\n\n      .isoInputWrapper {\n        margin-bottom: 15px;\n\n        &:last-of-type {\n          margin-bottom: 0;\n        }\n\n        input {\n          &::-webkit-input-placeholder {\n            color: ${palette('grayscale', 0)};\n          }\n\n          &:-moz-placeholder {\n            color: ${palette('grayscale', 0)};\n          }\n\n          &::-moz-placeholder {\n            color: ${palette('grayscale', 0)};\n          }\n          &:-ms-input-placeholder {\n            color: ${palette('grayscale', 0)};\n          }\n        }\n      }\n\n      .isoHelperText {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 1.2;\n        color: ${palette('grayscale', 1)};\n        padding-left: ${props =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : '13px'};\n        padding-right: ${props =>\n          props['data-rtl'] === 'rtl' ? '13px' : 'inherit'};\n        margin: 15px 0;\n        position: relative;\n        display: flex;\n        align-items: center;\n\n        &:before {\n          content: '*';\n          color: ${palette('error', 0)};\n          padding-right: 3px;\n          font-size: 14px;\n          line-height: 1;\n          position: absolute;\n          top: 2px;\n          left: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n          right: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n        }\n      }\n\n      .isoHelperWrapper {\n        margin-top: 35px;\n        flex-direction: column;\n      }\n\n      .isoOtherLogin {\n        padding-top: 40px;\n        margin-top: 35px;\n        border-top: 1px dashed ${palette('grayscale', 2)};\n\n        > a {\n          display: flex;\n          margin-bottom: 10px;\n\n          &:last-child {\n            margin-bottom: 0;\n          }\n        }\n\n        button {\n          width: 100%;\n          height: 42px;\n          border: 0;\n          font-weight: 500;\n\n          &.btnFacebook {\n            background-color: #3b5998;\n\n            &:hover {\n              background-color: darken(#3b5998, 5%);\n            }\n          }\n\n          &.btnGooglePlus {\n            background-color: #dd4b39;\n            margin-top: 15px;\n\n            &:hover {\n              background-color: darken(#dd4b39, 5%);\n            }\n          }\n\n          &.btnAuthZero {\n            background-color: #e14615;\n            margin-top: 15px;\n\n            &:hover {\n              background-color: darken(#e14615, 5%);\n            }\n          }\n\n          &.btnFirebase {\n            background-color: ${palette('color', 5)};\n            margin-top: 15px;\n\n            &:hover {\n              background-color: ${palette('color', 6)};\n            }\n          }\n        }\n      }\n\n      .isoForgotPass {\n        font-size: 12px;\n        color: ${palette('text', 3)};\n        margin-bottom: 10px;\n        text-decoration: none;\n\n        &:hover {\n          color: ${palette('primary', 0)};\n        }\n      }\n\n      button {\n        font-weight: 500;\n      }\n    }\n  }\n`;\n\nexport default WithDirection(SignInStyleWrapper);\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Input from '../../components/uielements/input';\nimport Checkbox from '../../components/uielements/checkbox';\nimport Button from '../../components/uielements/button';\nimport authAction from '../../redux/auth/actions';\nimport appAction from '../../redux/app/actions';\nimport Auth0 from '../../helpers/auth0';\nimport Firebase from '../../helpers/firebase';\nimport FirebaseLogin from '../../components/firebase';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport SignInStyleWrapper from './signin.style';\nimport notification from \"../../components/notification\";\nimport firebase from \"firebase/app\";\n\n\nconst { login } = authAction;\nconst { clearMenu } = appAction;\n\nclass SignIn extends Component {\n  state = {\n    redirectToReferrer: false,\n    email: '',\n    password: '',\n    remember: false\n  };\n\n  componentDidMount() {\n    const { login, history } = this.props;\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) history.push('/dashboard');\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.isLoggedIn !== nextProps.isLoggedIn &&\n      nextProps.isLoggedIn === true\n    ) {\n      this.setState({ redirectToReferrer: true });\n    }\n  }\n  handleLogin = (token = false) => {\n    const { login } = this.props;\n    const { email, password, remember } = this.state;\n    if (email !== '' && password !== '') {\n      Firebase.login({ email, password, remember })\n          .then((doc) => {\n            if (doc.user) {\n              if (!localStorage.getItem('user_id')) {\n                localStorage.setItem('user_id', doc.user.uid);\n              }\n              login();\n              notification('success', 'Sign-in succeeded');\n              this.props.history.push('/dashboard');\n            } else {\n              notification('error', doc.message);\n            }\n          }).catch((e) => {\n            notification('error', 'Sign-in failed');\n      });\n    }\n  };\n\n  handleOnChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n\n  render() {\n    const from = { pathname: '/dashboard' };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) {\n      return <Redirect to={from} />;\n    }\n    return (\n      <SignInStyleWrapper className=\"isoSignInPage\">\n        <div className=\"isoLoginContentWrapper\">\n          <div className=\"isoLoginContent\">\n            <div className=\"isoLogoWrapper\">\n              <Link to=\"/dashboard\">\n                <IntlMessages id=\"page.signInTitle\" />\n              </Link>\n            </div>\n\n            <div className=\"isoSignInForm\">\n              <div className=\"isoInputWrapper\">\n                <Input value={this.state.email} name=\"email\" onChange={this.handleOnChange} size=\"large\" placeholder=\"Email\" />\n              </div>\n\n              <div className=\"isoInputWrapper\">\n                <Input value={this.state.password} name=\"password\" onChange={this.handleOnChange} size=\"large\" type=\"password\" placeholder=\"Password\" />\n              </div>\n\n              <div className=\"isoInputWrapper isoLeftRightComponent\">\n                <Checkbox name=\"remember\" onChange={(e) => {\n                  this.setState({\n                    remember: e.target.checked\n                  })\n                }}>\n                  <IntlMessages id=\"page.signInRememberMe\" />\n                </Checkbox>\n                <Button type=\"primary\" onClick={this.handleLogin}>\n                  <IntlMessages id=\"page.signInButton\" />\n                </Button>\n              </div>\n              <div className=\"isoCenterComponent isoHelperWrapper\">\n                <Link to=\"/forgotpassword\" className=\"isoForgotPass\">\n                  <IntlMessages id=\"page.signInForgotPass\" />\n                </Link>\n                <Link to=\"/signup\">\n                  <IntlMessages id=\"page.signInCreateAccount\" />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </SignInStyleWrapper>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    isLoggedIn: state.Auth.idToken !== null ? true : false,\n  }),\n  { login, clearMenu }\n)(SignIn);\n"],"sourceRoot":""}